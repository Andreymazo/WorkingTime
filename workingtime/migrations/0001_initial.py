# Generated by Django 4.2.4 on 2023-08-08 19:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('full_name', models.CharField(max_length=30)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'permissions': [('workingtime.add_customuser', 'Can add customuser'), ('workingtime.change_customuser', 'Can change customuser'), ('workingtime.delete_customuser', 'Can delete customuser'), ('workingtime.view_customuser', 'Can view customuser')],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Работник')),
                ('engaged', models.DateTimeField(default=django.utils.timezone.now)),
                ('customuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Timesheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_work', models.BooleanField(choices=[(True, 'WORK'), (False, 'NOWORK')], default=False, verbose_name='Статус работы')),
                ('date', models.DateField(verbose_name='Data')),
                ('entry', models.TimeField(default='09:00:00', verbose_name='Начало рабочего дня')),
                ('lunch', models.TimeField(auto_now=True, null=True, verbose_name='Начало перерыва')),
                ('out', models.TimeField(default='18:00:00', verbose_name='Конец рабочего дня')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timesheet', to='workingtime.employee')),
            ],
            options={
                'verbose_name_plural': 'Таймшиты',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='WorkTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_safe_sheets', models.TimeField(blank=True, null=True)),
                ('status_work_wt', models.BooleanField(blank=True, null=True)),
                ('timesheet', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='worktime', to='workingtime.timesheet')),
            ],
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Работодатель')),
                ('joined', models.DateTimeField(auto_now_add=True)),
                ('customuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='employer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workingtime.employer'),
        ),
        migrations.AlterUniqueTogether(
            name='employee',
            unique_together={('name', 'customuser')},
        ),
    ]
